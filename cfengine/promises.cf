body common control
{
  bundlesequence => { "selfexec", "packages" };
  inputs => { "cfengine_stdlib.cf" };
}

bundle agent test
{
  reports:
    cfengine_3::
      "Hello world!";
}

bundle agent selfexec {
  files:
    "/etc/cron.daily/cfengine3"
      copy_from => no_backup_cp("$(sys.workdir)/inputs/cronscript.sh"),
      perms => mog("755", "root", "root");
}

bundle agent packages
{
  vars:
    "buildslave_packages" slist => {
      "realpath",
    };
    "andi_packages" slist => {
      "ack-grep",
      "astyle",
      "bsdmainutils",
      "dos2unix",
      "eclipse",
      "exuberant-ctags",
      "fish",
      "fonts-inconsolata",
      "fonts-liberation",
      "fonts-sil-gentium",
      "fonts-sil-gentium-basic",
      "gedit",
      "gitg",
      "gitk",
      "gnome-terminal",
      "gnupg",
      "ikiwiki",
      "indicator-multiload",
      "inkscape",
      "inotify-tools",
      "language-pack-de",
      "language-pack-en",
      "lsb-release",
      "lshw",
      "lsof",
      "mercurial",
      "mplayer",
      "multiarch-support",
      "mutt",
      "pandoc",
      "par",
      "popularity-contest",
      "pylint",
      "python3-feedparser",
      "rar",
      "thunderbird",
      "tmux",
      "vim",
      "vlc",
      "weechat-curses",
      "wget",
      "xclip",
      "xdg-utils",
    };
    "ipd_packages" slist => {
      "ant",
      "build-essential",
      "cdecl",
      "cmake",
      "gdb",
      "gimp",
      "git-svn",
      "krb5-user",
      "latexmk",
      "openjdk-7-jdk",
      "openjdk-7-jre",
      "openssh-client",
      "subversion",
      "vite",
    };
    "private_packages" slist => {
      "avidemux",
      "calligrastage",
      "context",
      "font-manager",
      "gargoyle-free",
      "gimp",
      "gstreamer0.10-plugins-bad",
      "gstreamer0.10-plugins-bad-multiverse",
      "gstreamer0.10-plugins-good",
      "gstreamer0.10-plugins-ugly",
      "offlineimap",
    };
    "always_desired_packages" slist => {
      "git",
      "python3",
    };
    "personal_laptop_packages" slist => {
      @(always_desired_packages),
      @(ipd_packages),
      @(private_packages),
      @(andi_packages),
    };
  packages:
    ubuntu::
       "$(personal_laptop_packages)"
                  package_policy => "add",
                  package_method => apt,
                  action => if_elapsed(1440);
}
